apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: minio-fetch
  annotations:
    tekton.dev/categories: Minio
    tekton.dev/tags: minio
    tekton.dev/displayName: "minio fetch"
    tekton.dev/platforms: "linux/amd64"
spec:
  description: >-
    The minio-fetch Task will fetch a object from the provided minio host and credentials into the
    output Workspace.

  workspaces:
    - name: output
      description: The minio fetch will be stored onto the volume backing this workspace

  params:
    - name: scheme
      type: string
      description: minio server scheme (http or https)
      default: "http"
    - name: host
      type: string
      description: minio host/domain to fetch (fabric-minio.baas-system.svc.cluster.local)
      default: fabric-minio.baas-system.svc.cluster.local
    - name: bucket
      type: string
      description: minio's bucket name
    - name: object
      type: string
      description: minio's object path
    - name: accessKey
      type: string
      description: the accessKey used to fetch minio object
    - name: secretKey
      type: string
      description: the secretKey used to fetch minio object
    - name: subdirectory
      description: subdirectory inside the "output" workspace to store the minio object into
      type: string
      default: ""
    - name: minioClientImage
      type: string
      default: "hyperledgerk8s/minio-mc:RELEASE.2023-01-28T20-29-38Z"
      description: the image used where the minio-fetch
    
  results:
    - name: filepath
      description: The precise FilePath this minio object stored
  steps:
    - name: fetch
      image: $(params.minioClientImage)
      env:
      - name: MC_HOST_minio
        value: $(params.scheme)://$(params.accessKey):$(params.secretKey)@$(params.host)
      - name: WORKSPACE_OUTPUT_PATH
        value: $(workspaces.output.path)
      args:
        [
          "cp",
          --recursive,
          minio/$(params.bucket)/$(params.object),
          $(workspaces.output.path)/$(params.subdirectory)/$(params.bucket),
        ]
